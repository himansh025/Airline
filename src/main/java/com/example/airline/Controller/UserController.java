package com.example.airline.Controller;import com.example.airline.Entity.User;import com.example.airline.Service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping("/api/users")@CrossOrigin(origins = "*")public class UserController {    @Autowired    private UserService userService;    @PostMapping("/register")    public ResponseEntity<?> register(@RequestBody User user) {        try {            User registeredUser = userService.registerUser(user);            return ResponseEntity.ok()                    .header("message","User registered successfully")                    .body(registeredUser);        } catch (Exception e) {            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)                    .body("User Registration failed: " + e.getMessage());        }}    @GetMapping("/profile/{id}")    public ResponseEntity<?> getUserProfile(@PathVariable Long id) {        try {            User user = userService.getUserById(id);            return ResponseEntity.ok()                    .header("message","User profile retrieved")                    .body(user);        } catch (Exception e) {            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)                    .body("User not found: " + e.getMessage());        }    }    @PutMapping("/profile/{id}")    public ResponseEntity<?> updateUserProfile(@PathVariable Long id, @RequestBody User user) {        try {            User updatedUser = userService.updateUser(id, user);            return ResponseEntity.ok()                    .header("message","Profile updated successfully")                    .body(updatedUser);        } catch (Exception e) {            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)                    .body("Update failed: " + e.getMessage());        }    }    @GetMapping("/all")    public ResponseEntity<?> getAllUsers() {        try {            List<User> users = userService.getAllUsers();            return ResponseEntity.ok()                    .header("message","Users retrieved successfully")                    .body(users);        } catch (Exception e) {            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)                    .body("all User get failed : " + e.getMessage());        }    }}