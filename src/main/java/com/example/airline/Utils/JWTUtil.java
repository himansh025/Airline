package com.example.airline.Utils;import io.jsonwebtoken.Claims;import io.jsonwebtoken.Jwts;import io.jsonwebtoken.security.Keys;import org.springframework.beans.factory.annotation.Value;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.stereotype.Component;import javax.crypto.SecretKey;import java.nio.charset.StandardCharsets;import java.util.Date;@Componentpublic class JWTUtil {    @Value("${JWT.SECRET.KEY}")    private static String SECRET;    private static SecretKey getSignInKey() {        return Keys.hmacShaKeyFor(SECRET.getBytes(StandardCharsets.UTF_8));    }    private static final long expirationTime = 1000 * 60 * 60;    public static String generateToken(String username) {        return Jwts.builder()                .subject(username)                .issuedAt(new Date())                .expiration(new Date(System.currentTimeMillis() + expirationTime))                .signWith(getSignInKey())                .compact();    }    public String extractUsername(String token) {        return extractClaims(token).getSubject();    }    private Claims extractClaims(String token) {        return Jwts.parser()                .verifyWith(getSignInKey())                .build()                .parseSignedClaims(token)                .getPayload();    }    public boolean validateToken(String username, UserDetails userDetails, String token) {        return username.equals(userDetails.getUsername()) && !isTokenExpired(token);    }    private boolean isTokenExpired(String token) {        return extractClaims(token).getExpiration().before(new Date());    }}